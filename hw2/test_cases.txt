TEST-1
TEST-BEGIN
COMMAND:
ls | wc
FLOW COMMAND:
./flow filecount.flow doit
EXPECTED OUTPUT:
      11      11     146
TEST-END

TEST-2
TEST-BEGIN
COMMAND:
cat foo.txt ; cat foo.txt | sed 's/o/u/g'
FLOW COMMAND:
./flow complicated.flow foo_then_fuu
EXPECTED OUTPUT:
f o of u u
TEST-END

TEST-3
TEST-BEGIN
COMMAND:
(cat foo.txt ; cat foo.txt | sed 's/o/u/g') | wc
FLOW COMMAND:
./flow complicated.flow shenanigan
EXPECTED OUTPUT:
      0       5      10
TEST-END


TEST-4
TEST-BEGIN
COMMAND: 
cat > comprehensive.flow << EOL
FLOW COMMAND: ./flow comprehensive.flow number_operations
EXPECTED OUTPUT:
1
2
3
4
5
6
7
8
9
10
Sum: 55
Product: 3628800
TEST-END

TEST-5
TEST-BEGIN
COMMAND: 
# Using the comprehensive.flow file created in TEST-5
FLOW COMMAND: ./flow comprehensive.flow word_operations
EXPECTED OUTPUT:
      1 grape
      1 fig
      1 elderberry
      1 date
      1 cherry
      1 banana
      1 apple
APPLE BANANA CHERRY DATE ELDERBERRY FIG GRAPE
TEST-END

TEST-6
TEST-BEGIN
COMMAND: 
# Using the comprehensive.flow file created in TEST-5
FLOW COMMAND: ./flow comprehensive.flow numbers_to_reverse_sort
EXPECTED OUTPUT:
10
9
8
7
6
5
4
3
2
1
TEST-END

TEST-7
TEST-BEGIN
COMMAND:
mkdir test_directory | wc
FLOW COMMAND:
./flow error_handling.flow catch_errors
EXPECTED OUTPUT:
       1       4      35
TEST-END